/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PartnerstackApi } from "@fern-api/partnerstack";
import * as core from "../../../../core";

export const CreateDealRequestBody: core.serialization.Schema<
    serializers.CreateDealRequestBody.Raw,
    PartnerstackApi.CreateDealRequestBody
> = core.serialization
    .union("type", {
        group_key: core.serialization.lazyObject(async () => (await import("../../..")).GroupKey),
        partner_key: core.serialization.lazyObject(async () => (await import("../../..")).PartnerKey),
    })
    .transform<PartnerstackApi.CreateDealRequestBody>({
        parse: (value) => {
            switch (value.type) {
                case "group_key":
                    return PartnerstackApi.CreateDealRequestBody.groupKey(value);
                case "partner_key":
                    return PartnerstackApi.CreateDealRequestBody.partnerKey(value);
                default:
                    return PartnerstackApi.CreateDealRequestBody._unknown(value);
            }
        },
        json: (value) => value as any,
    });

export declare namespace CreateDealRequestBody {
    type Raw = CreateDealRequestBody.GroupKey | CreateDealRequestBody.PartnerKey;

    interface GroupKey extends serializers.GroupKey.Raw {
        type: "group_key";
    }

    interface PartnerKey extends serializers.PartnerKey.Raw {
        type: "partner_key";
    }
}
